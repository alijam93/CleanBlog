@inject HttpClient http
@inject NavigationManager navigation

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header d-flex bg-info">
                <h5 class="modal-title text-white w-100">@ModalTitle</h5>
                <button type="button" class="btn-close" aria-label="Close" @onclick="Close"></button>
            </div>
            <div class="modal-body bg-light text-primary">
                <p class="text-center text-warning mb-4 h3">
                    Are you sure you want to delete this article?
                </p>
                <button type="submit" class="btn btn-danger" @onclick="() => DeleteArticle()">Delete</button>
                <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
            </div>
        </div>
    </div>
</div>

@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    [Parameter] public string ModalTitle { get; set; }

    public int ArticleId { get; set; }

    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    async Task DeleteArticle()
    {
        await http.DeleteAsync($"api/posts/{ArticleId}");
        navigation.NavigateTo($"articles");
    }

    public void Open(int id)
    {
        ArticleId = id;
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}