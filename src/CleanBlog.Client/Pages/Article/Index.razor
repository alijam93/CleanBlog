@page "/articles"
@inject HttpClient http
@inject IPostService PostService
@using CleanBlog.Shared.Features.Pagination
@using CleanBlog.Components.Pagination
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager navigation


@if (Posts == null)
{
    <Spinner />
}
else
{

    <div class="d-flex justify-content-end mt-2 mr-5">
        @*<RadioGroup @bind-Value="@tagId" Size="small" ButtonStyle="solid">

                <Radio RadioButton Value="0"><p @onclick="() => GetPostByTag(null, 0)">نمایش همه پست ها</p> </Radio>
                @foreach (var tag in Tags)
                    {
                    <Radio RadioButton Value="@tag.Id"><p @onclick="() => GetPostByTag(tag.Name, tag.Id)">@tag.Name</p> </Radio>
                    }
            </RadioGroup>*@
        <div>
            <p class="badge badge-light shadow-sm text-center ml-2">
                <strong class="h6">
                    @*<Icon Type="tags" Class="pl-1" Theme="outline" />تگ ها:*@
                </strong>
            </p>
        </div>
    </div>

    <div class="row row-cols-1 row-cols-md-2">
        @foreach (var post in Posts)
        {
            <div class="col mb-4">
                <div class="card article-card">
                    @if (!string.IsNullOrEmpty(post.Image))
                    {
                        <img src="@post.Image" class="article-img" loading="lazy" />
                    }
                    else
                    {
                        <div class="article-img"></div>
                    }
                    <div class="card-body article-body">
                        <h5 class="card-title text-wrap article-title rtl">
                            @*<a href="@($"article/{post.Id}/{FriendlyUrlExtension.GetSlugTitle(post.Title)}")" class="read-more">
                                @post.Title
                            </a>*@
                        </h5>
                        <div class="card-text d-flex bd-highlight pt-4 mb-3">
                            <div class="mr-auto p-2 bd-highlight">
                                @*<AntDesign.Tag Color="blue"> @post.Created.ToPersianDate()</AntDesign.Tag>*@
                            </div>
                            <div class="p-2 bd-highlight">
                                @foreach (var tag in post.Tags)
                                {
                                    <a href="@($"tag/{tag.Name}")">
                                        @*<AntDesign.Tag Color="purple">
                                                @tag.Name
                                            </AntDesign.Tag>*@
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row mt-5 justify-content-center">
        <PostPagination Url="articles" Paging="Paging" Spread="3" SelectedPage="SelectedPage" />
    </div>
}

@code {
    private List<TagDTO> Tags { get; set; } = new List<TagDTO>();
    int pageCount = 0;
    public string tagName;
    public int tagId;


    public List<PostDTO> Posts;
    public Paging Paging { get; set; } = new Paging();
    private PostParameters _postParameters = new PostParameters();

    protected override async Task OnInitializedAsync()
    {
        Tags = await http.GetFromJsonAsync<List<TagDTO>>("api/admin/tags");
        var uri = navigation.ToAbsoluteUri(navigation.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("page", out var value))
        {
            pageCount = Convert.ToInt32(value);
        }
        await GetPostByTag(tagName, tagId);
    }

    private async Task SelectedPage(int page)
    {
        _postParameters.PageNumber = page;
        await GetPostByTag(tagName, tagId);
        Console.WriteLine($"page is => {page}, page count => {pageCount}");
    }

    public async Task GetPostByTag(string name, int id)
    {
        var pagingPost = await PostService.GetPosts(_postParameters, name, id);
        Posts = pagingPost.Items;
        Paging = pagingPost.Paging;
    }
}
